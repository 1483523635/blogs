# 怎样去构建一个可以维护的项目

## 前提

你要知道一个项目，当前存在什么问题，导致烂掉的。

## 小记录（前后端）

- this 传来传去
- 传大对象
- 底层和高层分离
- 拼写错误
- 长方法
- 没测试
- 可读性差- magic number
- mutable

## 好项目

### 底层和高层分离

> 底层抽象过高，使用层和低层要有一层类似于胶水层的东西。

对比前端

有个基础组建库的底层高阶抽象层， UI层和抽象的底层之间有一层抽象去让底层不那么抽象。通常是小组件。

对比后端

有人给你封装了一套数据库操作的接口， controller层直接用，没有service层去当胶水层。


### 传大对象

> 很明显违反了`最少知识原则`。对于被调用方，通常知道的越少越好，这样被调用方，做的事情就会非常有限，方法就会变得很小。 如果给个大对象。。
